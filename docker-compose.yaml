services:
  db:
    image: postgres:15-alpine
    container_name: urls_db
    environment:
      POSTGRES_HOST: db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: shortener
      POSTGRES_PORT: 5432
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks: [docker_net]

  migrate:
    image: migrate/migrate:4
    depends_on:
      db:
        condition: service_healthy
    networks: [docker_net]
    volumes:
      - ./migrations:/migrations:ro
    command: [
      "-path", "/migrations",
      "-database", "postgres://postgres:postgres@db:5432/shortener?sslmode=disable",
      "up"
    ]
    # мигратор должен завершиться и выйти (не висеть)
    restart: "no"

  shortener:
    build: .
    depends_on:
      db:
        condition: service_healthy
    container_name: url_shortener
    environment:
      APP_SECRET: test_secret
      CONFIG_PATH: /app/config.yaml
    ports:
      - "8080:8080"


    networks: [docker_net]

volumes:
  pgdata:

networks:
  docker_net:
    external: true